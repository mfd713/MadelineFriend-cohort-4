+*ConsoleIO
    *+PromptUserInt(string message) : int
    *+PromptUserInt(string message, int min, int max) : int
    *+PromptUser(string message) : string
    *+EncounterMenu(string eName) : int
+Shopkeeper
    +Name : string
    +Cart : Cart
    +Distance : int
    +Gold : int
+Item
    +Name : string
    +Int : price
+IEncounter
    -_rand : Random
    +AppearChance : int
+Traveler : IEncounter
    -_rand : Random
    +AppearChance : int
    +HaggleChance : int
    +Purchase(Inventory) : bool
+Theif : IEncounter
    -_rand : Random
    +AppearChance : int
    +RobAmount : int
+Treasure : IEncounter
    -_rand : Random
    +AppearChance : decimal
    +Contents : Item
+Cart
    _limit : int
    +Inventory : Dictonary<Item,quantity>
    +ProtectionLvl : int
+GameRunner
    +Protag : Shopkeeper
    +Customer : Traveler
    +Bandit : Theif
    +Treasure : Treasure
    +Run(
        Travel(Protag) : void
            -Protag.Distance+=100
            -if Protag.Distance & 600 == 0{
                -theif chance +=2%
                -can +Cart.ProtectionLvl for -Protag.Gold
                    -price increase as theif chance increase
            }
            -new IEncounter(10% traveler, 10% theif[to begin], 10% treasure, 70% nothing[to begin])
                -if theif && not protected, remove random thing & gold. If protected, ProtectionLvl-- and nothing else happens (maybe random chance of bounty reward later)
                -if traveler && haggle time, attempt purchase w/ haggled price. Otherwise attempt regular purchase. Remove item & Increase Gold if purchase successful
                -if treasure && room for more items, add item. If treasure && no room, add some gold
            -if Inventory.count == 0 or Gold == 0, end game
    )
    +EndGame(
        -print total miles traveled
        -prompt user to play again
    )
